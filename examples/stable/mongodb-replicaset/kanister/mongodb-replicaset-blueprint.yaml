apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: mongodb-replicaset-blueprint
actions:
  backup:
    type: StatefulSet
    outputArtifacts:
      backupInfo:
        keyValue:
          backupIdentifier: "{{ .Phases.backupSnapshots.Output.BackupAllInfo }}"
    phases:
    - func: BackupDataAll
      name: backupSnapshots
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        container: "mongodb-replicaset"
        includePath: /data
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-replicaset-backups/{{ .StatefulSet.Name }}/rs_backup"
  restore:
    type: StatefulSet
    phases:
    - func: ScaleWorkload
      name: ShutdownApplication
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: "{{ .StatefulSet.Name }}"
        kind: StatefulSet
        replicas: 0
    - func: RestoreDataAll
      name: restoreFromSnapshots
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        image: kanisterio/kanister-tools:0.21.0
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-replicaset-backups/{{ .StatefulSet.Name }}/rs_backup"
        backupInfo: "{{ .ArtifactsIn.backupInfo.KeyValue.backupIdentifier }}"
    - func: ScaleWorkload
      name: StartupApplication
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        name: "{{ .StatefulSet.Name }}"
        kind: StatefulSet
        replicas: 3
  delete:
    type: StatefulSet
    phases:
    - func: DeleteDataAll
      name: deleteSnapshots
      args:
        namespace: "{{ .StatefulSet.Namespace }}"
        backupArtifactPrefix: "{{ .Profile.Location.Bucket }}/mongodb-replicaset-backups/{{ .StatefulSet.Name }}/rs_backup"
        backupInfo: "{{ .ArtifactsIn.backupInfo.KeyValue.backupIdentifier }}"
        reclaimSpace: true
